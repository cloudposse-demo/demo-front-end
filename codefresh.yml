# Build a service with environment variables
version: '1.0'

steps:
  init-variables:
    title: Init variables
    image: alpine
    commands:
      - cf_export BUILD_HARNESS_VERSION=feature-helm-chart-ops
      - cf_export GIT_BRANCH=${{CF_BRANCH}}
      - cf_export BASE_HOST=cloudposse.org

  build-image:
    title: Build image
    type: build
    description: Build frontend
    image-name: cloudpossedemo/frontend
    dockerfile: Dockerfile

  semver:
    title: Export semantic version
    image: cloudposse/build-harness:${{BUILD_HARNESS_VERSION}}
    working_directory: ${{build-image}}
    commands:
      - make git:show
      - make semver:show
      - make semver:export >> ${{CF_VOLUME_PATH}}/env_vars_to_export
      - make stages:export
      - make stages:export >> ${{CF_VOLUME_PATH}}/env_vars_to_export

  build-chart:
    title: Build Charts
    image: cloudposse/build-harness:${{BUILD_HARNESS_VERSION}}
    working_directory: ${{build-image}}
    commands:
      - make helm:repo:add-remote
      - make helm:chart:clean
      - make helm:chart:build-all
      - make helm:chart:publish

  push-image-commit:
    title: Push image with commit based semver tags
    type: push
    candidate: ${{build-image}}
    tags:
      - "${{SEMVERSION_COMMIT_SHORT}}"
      - "${{SEMVERSION_COMMIT}}"

  push-image-branch:
    title: Push image with branch based semver tags
    type: push
    candidate: ${{build-image}}
    tags:
      - "${{SEMVERSION_BRANCH}}"
      - "${{SEMVERSION_BRANCH_COMMIT_SHORT}}"
      - "${{SEMVERSION_BRANCH_COMMIT}}"
    when:
      condition:
        all:
          executeForBranch: "'${{SEMVERSION_BRANCH}}' != ''"

  push-image-tag:
    title: Push image with tag based semver tags
    type: push
    candidate: ${{build-image}}
    tag: "${{SEMVERSION_TAG}}"
    when:
      condition:
        all:
          executeForTag: "'${{SEMVERSION_TAG}}' != ''"

  push-image-latest:
    title: Push image with latest tag
    type: push
    candidate: ${{build-image}}
    tag: latest
    when:
      condition:
        all:
          executeForMasterBranch: "'${{CF_BRANCH}}' == 'master'"

  generate-helm-values:
    title: Generate helm values
    image: alpine
    commands:
      - |-
        cat > ./.values.yaml <<EOL
        ingress:
        - name: "default"
          labels:
            dns: "route53"
          annotations:
            domainName: "${INGRESS_HOST}"
          hosts:
            "${INGRESS_HOST}": "/"
        EOL
    environment:
      - INGRESS_HOST=${{FEATURE}}.${{PROJECT}}.${{BASE_HOST}}

  deploy-helm:
    title: Deploy helm chart
    image: cloudposse/cf-plugin-helm:0.2.0-fix-working-with-repo
    working_directory: ${{build-image}}
    commands:
      - cat ./.values.yaml
      - /opt/bin/release_chart
    environment:
      - CHART_NAME=frontend
      - RELEASE_NAME=frontend-${{CF_BRANCH_TAG_NORMALIZED}}
      - KUBE_CONTEXT=cluster-4
      - NAMESPACE=${{NAMESPACE}}
      - CHART_VERSION=${{SEMVERSION_BRANCH}}
      - CHART_REPO_URL=${{REPO_ENDPOINT}}
      - WAIT=false
      - TIMEOUT=1200
      - ARGS=-f ./.values.yaml
      - DEBUG_CHART=true
